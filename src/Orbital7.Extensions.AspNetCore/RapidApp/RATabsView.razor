<div class="btn-group @this.Class" role="group">

    @foreach (TabPage tabPage in _pages)
    {
        <button type="button"
                class="btn @GetButtonClass(tabPage)"
                @onclick="@(() => ActivatePage(tabPage))">
            @tabPage.Text
        </button>
    }

</div>

<div class="ra-flex-container-scrollable-wrapper ra-tabsview-content @this.ContentClass">
    <CascadingValue Value="this">
        @ChildContent
    </CascadingValue>
</div>

@code {

    private List<TabPage> _pages = new List<TabPage>();
    private TabPage _activePage { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public RATabsViewRenderMode RenderMode { get; set; } = RATabsViewRenderMode.Dynamic;

    [Parameter]
    public string Class { get; set; }

    [Parameter]
    public string ContentClass { get; set; }

    public TabPage ActiveTab => _activePage;

    internal void AddPage(
        TabPage tabPage)
    {
        _pages.Add(tabPage);

        if (_pages.Count == 1)
        {
            _activePage = tabPage;
        }
        StateHasChanged();
    }

    public async Task SelectAsync(
        string tabId)
    {
        var tab = _pages
            .Where(x => x.ID == tabId)
            .FirstOrDefault();

        if (tab != null)
        {
            _activePage = tab;
            await this.InvokeAsync(StateHasChanged);
        }
        else
        {
            throw new Exception($"Tab ID {tabId} was not found");
        }
    }

    private string GetButtonClass(
        TabPage page)
    {
        return page == _activePage ? "btn-primary" : "btn-secondary";
    }

    private void ActivatePage(
        TabPage page)
    {
        _activePage = page;
    }

}
